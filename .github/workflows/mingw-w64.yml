name: mingw-w64 builds
on:
  push:
    paths-ignore:
      - "Docs/*"
      - .travis.yml
      - .gitignore
      - "*.md"
  pull_request:
    paths-ignore:
      - "Docs/*"
      - .travis.yml
      - .gitignore
      - "*.md"

env:
  CC: ccache gcc
  CXX: ccache g++
  CFLAGS: -pipe -static -O3 -mtune=generic -D_FILE_OFFSET_BITS=64 -mthreads
  CXXFLAGS: -pipe -static -O3 -mtune=generic -D_FILE_OFFSET_BITS=64 -mthreads
  LDFLAGS: -pipe -static -static-libgcc

jobs:
  build:
    runs-on: windows-2019
    steps:
      - name: Clone FFmpeg
        uses: actions/checkout@v2
        with:
          repository: FFmpeg/FFmpeg

      - name: Cache ccache files
        uses: actions/cache@v2
        with:
          path: |
            .ccache
          key: ${{ runner.os }}-msys64-0-${{ hashFiles('**/*.c') }}
          restore-keys: |
            ${{ runner.os }}-msys64-

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: mingw-w64-x86_64-ccache mingw-w64-x86_64-yasm mingw-w64-x86_64-nasm mingw-w64-x86_64-cmake mingw-w64-x86_64-pkg-config mingw-w64-x86_64-gcc mingw-w64-x86_64-ninja mingw-w64-x86_64-dav1d make diffutils
          update: true

      - name: Set ccache dir
        run: echo "CCACHE_DIR=$PWD/.ccache" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Clone SVT-AV1
        uses: actions/checkout@v2
        with:
          path: svtav1
          fetch-depth: 0
      - name: Configure SVT-AV1
        shell: msys2 {0}
        run: |
          cmake -S svtav1 -B svtav1-build -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/mingw64 -DBUILD_SHARED_LIBS=OFF -DBUILD_APPS=OFF -DBUILD_DEC=OFF
          cmake --build svtav1-build --target install

      - name: Clone libaom
        run: git clone --branch master https://aomedia.googlesource.com/aom
      - name: Configure libaom
        shell: msys2 {0}
        run: |
          cmake -S aom -B aom-build -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/mingw64 -DBUILD_SHARED_LIBS=OFF -DENABLE_TESTS=0 -DENABLE_EXAMPLES=0 -DENABLE_DOCS=0 -DENABLE_TESTDATA=0 -DENABLE_TOOLS=0
          cmake --build aom-build --target install
          pkg-config --debug --libs aom

      - name: Clone libvpx
        run: git clone https://chromium.googlesource.com/webm/libvpx
      - name: Configure libvpx
        shell: msys2 {0}
        run: |
          mkdir -p vpx-build && cd vpx-build || exit 1
          ../libvpx/configure  --prefix=/mingw64 --disable-{examples,webm-io,libyuv,postproc,shared,unit-tests,docs,install-bins} --enable-{vp9-postproc,vp9-highbitdepth}
          make -j $(getconf _NPROCESSORS_ONLN 2>/dev/null || sysctl -n hw.ncpu) install

      - name: Configure FFmpeg
        shell: msys2 {0}
        run: |
          ./configure --arch=x86_64 --pkg-config-flags="--static" --cc="${CC:-ccache gcc}" --cxx="${CXX:-ccache g++}" --enable-{gpl,static} --enable-lib{vpx,aom,svtav1,dav1d}  --disable-shared || {
            cat ffbuild/config.log
            exit 1
          }
      - name: Build FFmpeg
        shell: msys2 {0}
        run: make -j $(nproc)

      - name: Get Current Release
        id: get_release
        shell: bash
        run: echo "::set-output name=upload_url::$(curl -L https://api.github.com/repos/${{ github.repository }}/releases/tags/$(cut -d/ -f3 <<< ${{ github.ref }}) | jq -r ."upload_url")"

      - name: Upload ffmpeg (mingw-w64)
        if: steps.get_release.outputs.upload_url == 'null'
        uses: actions/upload-artifact@v2
        with:
          name: svtav1-mingw-w64-ffmpeg
          path: ffmpeg.exe
      - name: Upload static ffmpeg.exe
        if: steps.get_release.outputs.upload_url != 'null'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ffmpeg.exe
          asset_name: ffmpeg.exe
          asset_content_type: application/vnd.microsoft.portable-executable
