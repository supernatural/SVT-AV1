name: Sanitizers
on:
  push:
    paths-ignore:
      - "Docs/*"
      - .travis.yml
      - appveyor.yml
      - .gitignore
      - "*.md"
  pull_request:
    paths-ignore:
      - "Docs/*"
      - .travis.yml
      - appveyor.yml
      - .gitignore
      - "*.md"
env:
  CC: ccache clang
  CXX: ccache clang++

jobs:
  sanitizers:
    name: Sanitizer (${{ matrix.sanitizer }})
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - sanitizer: address
            allows-failure: false
            ASAN_OPTIONS: detect_leaks=1

          - sanitizer: memory
            allows-failure: false
            CFLAGS: -fno-omit-frame-pointer
            CXXFLAGS: -fno-omit-frame-pointer
            svt-args: --asm 0

          - sanitizer: thread
            allows-failure: true
    env:
      CFLAGS: -fsanitize=${{ matrix.sanitizer }} ${{ matrix.CFLAGS }}
      CXXFLAGS: -fsanitize=${{ matrix.sanitizer }} ${{ matrix.CXXFLAGS }}
      LDFLAGS: -fsanitize=${{ matrix.sanitizer }} ${{ matrix.LDFLAGS }}
      ASAN_OPTIONS: ${{ matrix.ASAN_OPTIONS }}

    steps:
      - name: Install dependencies
        run: |
          [ -d ~/.ccache ] && sudo chown -R "$USER": ~/.ccache
          printf '%s\n' "CCACHE_DIR=$HOME/.ccache" >> $GITHUB_ENV
          sudo apt-get update
          sudo apt-get install -y yasm ninja-build ccache

      - uses: actions/checkout@v2

      - name: Cache ccache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ matrix.sanitizer }}-${{ hashFiles('**/*.c') }}
          restore-keys: ${{ runner.os }}-${{ matrix.sanitizer }}-

      - name: Run CMake
        run: cmake -S . -B Build -G Ninja -DCMAKE_BUILD_TYPE=Debug

      - name: Build
        run: cmake --build Build

      - name: Fetch test videos
        run: |
          curl -LO https://raw.githubusercontent.com/OpenVisualCloud/SVT-AV1-Resources/master/video.tar.gz
          tar xzf video.tar.gz

      - name: Run Encoder
        run: ./Bin/Debug/SvtAv1EncApp -i Chimera-Aerial_480x264_2997fps_10bit_420_150frames.y4m ${{ matrix.svt-args }} -n 120 --preset 8 -b output.ivf
        continue-on-error: ${{ matrix.allows-failure }}
