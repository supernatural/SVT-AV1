name: MSVC builds
on:
  push:
    paths-ignore:
      - "Docs/*"
      - .travis.yml
      - appveyor.yml
      - .gitignore
      - "*.md"
  pull_request:
    paths-ignore:
      - "Docs/*"
      - .travis.yml
      - appveyor.yml
      - .gitignore
      - "*.md"

env:
  GTEST_TOTAL_SHARDS: 8
  SVT_AV1_TEST_VECTOR_PATH: ${{ github.workspace }}/test/vectors

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        configuration:
          - Debug
          - Release
    env:
      CFLAGS: /WX
      CXXFLAGS: /WX
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: choco install -y nasm
      - name: Configure SVT-AV1
        run: cmake -S . -B Build -G "Visual Studio 16 2019" -A x64 -DCMAKE_INSTALL_PREFIX=C:/SVT-AV1 -DBUILD_SHARED_LIBS=ON -DBUILD_TESTING=ON
      - name: Build SVT-AV1
        run: cmake --build Build --parallel 4 --config ${{ matrix.configuration }} --target install
      - name: Download videos
        if: matrix.configuration == 'Debug'
        run: |
          Invoke-WebRequest -OutFile video.tar.gz -Uri https://raw.githubusercontent.com/OpenVisualCloud/SVT-AV1-Resources/master/video.tar.gz
          if (!(Test-Path -Path video.tar.gz)) {
            Invoke-WebRequest -OutFile video.tar.gz -Uri http://randomderp.com/video.tar.gz
          }
          tar xf video.tar.gz
      - name: Upload videos
        if: matrix.configuration == 'Debug'
        uses: actions/upload-artifact@v2
        with:
          name: svtav1-videos
          path: "*.y4m"
      - name: Upload binaries SVT-AV1 (MSVC)
        if: matrix.configuration == 'Release'
        uses: actions/upload-artifact@v2
        with:
          name: svtav1-MSVC-binaries
          path: Bin/Release
      - name: Cache vectors
        id: cache-vectors
        if: matrix.configuration == 'Debug'
        uses: actions/cache@v2
        with:
          path: test/vectors
          key: svtav1-vectors-${{ hashFiles('test/e2e_test/test_vector_list.txt') }}
      - name: Get test vectors
        if: matrix.configuration == 'Debug' && steps.cache-vectors.outputs.cache-hit != 'true'
        run: cmake --build Build --parallel 4 --target TestVectors
      - name: Upload vectors
        if: matrix.configuration == 'Debug'
        uses: actions/upload-artifact@v2
        with:
          name: svtav1-vectors-${{ hashFiles('test/e2e_test/test_vector_list.txt') }}
          path: test/vectors

  bit-depth-tests:
    name: ${{ matrix.bit }} tests
    runs-on: windows-2019
    needs: build
    strategy:
      fail-fast: false
      matrix:
        include:
          - bit: 8
            video: akiyo_cif.y4m
          - bit: 10
            video: Chimera-Aerial_480x264_2997fps_10bit_420_150frames.y4m
    steps:
      - name: Download binaries SVT-AV1 (MSVC)
        uses: actions/download-artifact@v2
        with:
          name: svtav1-MSVC-binaries
      - name: Download videos
        uses: actions/download-artifact@v2
        with:
          name: svtav1-videos
      - name: ${{ matrix.bit }}bit tests
        run: |
          ./SvtAv1EncApp --preset 0 -i ${{ matrix.video }} -n 3 -b test-pr-${{ matrix.bit }}bit-m0.ivf
          ./SvtAv1EncApp --preset 8 -i ${{ matrix.video }} -n 120 -b test-pr-${{ matrix.bit }}bit-m8.ivf

  unit-tests:
    name: Unit Tests (Windows, VS2019) Shard ${{ matrix.index }}
    runs-on: windows-2019
    needs: build
    strategy:
      fail-fast: false
      matrix:
        index: [0, 1, 2, 3, 4, 5, 6, 7]
    env:
      GTEST_SHARD_INDEX: ${{ matrix.index }}
    steps:
      - uses: actions/checkout@v2
      - name: Download binaries SVT-AV1 (MSVC)
        uses: actions/download-artifact@v2
        with:
          name: svtav1-MSVC-binaries
          path: Bin/Release
      - name: Run unit tests shard
        run: ./Bin/Release/SvtAv1UnitTests.exe --gtest_filter=-*FFT*

  e2e-tests:
    name: E2E Tests (Windows, VS2019) Shard ${{ matrix.index }}
    runs-on: windows-2019
    needs: build
    strategy:
      fail-fast: false
      matrix:
        index: [0, 1, 2, 3, 4, 5, 6, 7]
    env:
      GTEST_SHARD_INDEX: ${{ matrix.index }}
    steps:
      - uses: actions/checkout@v2
      - name: Download binaries SVT-AV1 (MSVC)
        uses: actions/download-artifact@v2
        with:
          name: svtav1-MSVC-binaries
          path: Bin/Release
      - name: Download vectors
        uses: actions/download-artifact@v2
        with:
          name: svtav1-vectors-${{ hashFiles('test/e2e_test/test_vector_list.txt') }}
          path: test/vectors
      - name: Run E2E tests shard
        run: ./Bin/Release/SvtAv1E2ETests.exe --gtest_filter=-*DummySrcTest*
